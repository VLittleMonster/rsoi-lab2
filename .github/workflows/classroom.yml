name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
jobs:
  unit-tests:
    name: UNIT tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install the necessary packages
        run: pip3.10 install -r services/gateway_service/requirements.txt

      - name: Run unit tests for loyalty service
        run: pytest -vs services/loyalty_service/app/unit_tests/tests.py
  
  deploy:
    name: VM's DEPLOY
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Send project files on VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "services,scripts,Dockerfile,docker-compose.yml"
          target: /home/${{ secrets.SSH_USER }}/hotel_booking_system
      
      - name: Build and up hotel-booking-system
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/${{ secrets.SSH_USER }}/hotel_booking_system
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose down
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rmi gateway_service
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rmi payment_service
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rmi loyalty_service
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker rmi reservation_service
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose build
            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
            echo ${{ secrets.SSH_PASSWORD }} | sudo ./scripts/wait-script.sh
  
  api-test:
    name: API tests
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v2/postman/collection.json
          environment: v2/postman/environment.json
          delayRequest: 15
          reporters: '[ "cli" ]'
          
      - name: Autograding
        uses: education/autograding@v1
        continue-on-error: true
